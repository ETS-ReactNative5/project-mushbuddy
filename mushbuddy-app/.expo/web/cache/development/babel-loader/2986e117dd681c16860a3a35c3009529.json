{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nvar Info = function Info(_ref) {\n  var id = _ref.id,\n      auth = _ref.auth,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  useEffect(function () {\n    if (id === auth.user._id) {\n      setUserData([auth.user]);\n    }\n  }, [id, auth, dispatch]);\n  return _jsx(ScrollView, {\n    children: userData.map(function (user) {\n      return _jsxs(View, {\n        children: [_jsx(Image, {\n          style: styles.tinyLogo,\n          source: {\n            uri: user.avatar\n          }\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: user.username\n          }), _jsx(Text, {\n            children: \"username\"\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: user.followers.length\n          }), _jsx(Text, {\n            children: \"Followers\"\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: user.following.length\n          }), _jsx(Text, {\n            children: \"Following\"\n          })]\n        })]\n      }, user._id);\n    })\n  });\n};\n\nexport default Info;","map":{"version":3,"sources":["/Users/jchen/CSProjects/project-mushbuddy/mushbuddy-app/newcomponents/info.js"],"names":["ScrollView","React","useState","useEffect","styles","StyleSheet","create","container","paddingTop","tinyLogo","width","height","logo","Info","id","auth","dispatch","userData","setUserData","user","_id","map","uri","avatar","username","followers","length","following"],"mappings":";;;;;AACA,SAASA,UAAT,QAA2B,8BAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GADkB;AAI7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GAJmB;AAQ7BC,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AARuB,CAAlB,CAAf;;AAcA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAA0B;AAAA,MAAxBC,EAAwB,QAAxBA,EAAwB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AACnC,kBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGW,EAAE,KAAKC,IAAI,CAACI,IAAL,CAAUC,GAApB,EAAwB;AACpBF,MAAAA,WAAW,CAAC,CAACH,IAAI,CAACI,IAAN,CAAD,CAAX;AACH;AACJ,GAJQ,EAIN,CAACL,EAAD,EAAKC,IAAL,EAAWC,QAAX,CAJM,CAAT;AAMA,SACI,KAAC,UAAD;AAAA,cAEQC,QAAQ,CAACI,GAAT,CAAa,UAAAF,IAAI;AAAA,aAAK,MAAC,IAAD;AAAA,mBAClB,KAAC,KAAD;AACI,UAAA,KAAK,EAAEf,MAAM,CAACK,QADlB;AAEI,UAAA,MAAM,EAAE;AAACa,YAAAA,GAAG,EAACH,IAAI,CAACI;AAAV;AAFZ,UADkB,EAKlB,MAAC,IAAD;AAAA,qBACI,KAAC,IAAD;AAAA,sBAAOJ,IAAI,CAACK;AAAZ,YADJ,EAEI,KAAC,IAAD;AAAA;AAAA,YAFJ;AAAA,UALkB,EASlB,MAAC,IAAD;AAAA,qBACI,KAAC,IAAD;AAAA,sBAAOL,IAAI,CAACM,SAAL,CAAeC;AAAtB,YADJ,EAEI,KAAC,IAAD;AAAA;AAAA,YAFJ;AAAA,UATkB,EAalB,MAAC,IAAD;AAAA,qBACI,KAAC,IAAD;AAAA,sBAAOP,IAAI,CAACQ,SAAL,CAAeD;AAAtB,YADJ,EAEI,KAAC,IAAD;AAAA;AAAA,YAFJ;AAAA,UAbkB;AAAA,SAAaP,IAAI,CAACC,GAAlB,CAAL;AAAA,KAAjB;AAFR,IADJ;AAyBH,CAlCD;;AAoCA,eAAeP,IAAf","sourcesContent":["import { Image, Text, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react'\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingTop: 50,\n    },\n    tinyLogo: {\n      width: 50,\n      height: 50,\n    },\n    logo: {\n      width: 66,\n      height: 58,\n    },\n  });\n\nconst Info = ({id, auth, dispatch}) => {\n    const [userData, setUserData] = useState([])\n    \n    useEffect(() => {\n        if(id === auth.user._id){\n            setUserData([auth.user])\n        }\n    }, [id, auth, dispatch])\n\n    return (\n        <ScrollView> \n            {\n                userData.map(user => (<View key = {user._id}>\n                    <Image\n                        style={styles.tinyLogo}\n                        source={{uri:user.avatar}}\n                    />\n                    <View>\n                        <Text>{user.username}</Text>\n                        <Text>username</Text>\n                    </View>\n                    <View>\n                        <Text>{user.followers.length}</Text>\n                        <Text>Followers</Text>\n                    </View>\n                    <View>\n                        <Text>{user.following.length}</Text>\n                        <Text>Following</Text>\n                    </View>\n                </View>\n                ))\n            }\n        </ScrollView >\n    )\n}\n\nexport default Info"]},"metadata":{},"sourceType":"module"}