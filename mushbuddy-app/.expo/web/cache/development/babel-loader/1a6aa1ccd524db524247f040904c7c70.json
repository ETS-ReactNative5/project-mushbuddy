{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport defaultIcon from \"../assets/icon_default.png\";\nimport { ButtonGroup } from 'react-native-elements';\nimport styles from \"./stylesheets/profile_style.js\";\nimport headerBackground from \"../assets/profile_assets/header_background2.png\";\nimport Badges from \"./badges.js\";\nimport History from \"./history.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.updateIndex = function (selectedIndex) {\n      _this.setState({\n        selectedIndex: selectedIndex\n      });\n    };\n\n    _this.renderSubComponent = function () {\n      if (_this.state.selectedIndex === 1) {\n        return _jsx(History, {});\n      } else {\n        return _jsx(Badges, {});\n      }\n    };\n\n    _this.state = {\n      selectedIndex: 2\n    };\n    _this.updateIndex = _this.updateIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var buttons = ['Badges', 'History'];\n      var selectedIndex = this.state.selectedIndex;\n      return _jsx(SafeAreaView, {\n        style: styles.container,\n        children: _jsxs(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          children: [_jsx(View, {\n            style: styles.upperContainer,\n            children: _jsxs(ImageBackground, {\n              source: headerBackground,\n              resizeMode: \"stretch\",\n              style: styles.headerBackgroundImage,\n              children: [_jsx(View, {\n                style: styles.upperNavigation,\n                children: _jsx(Icon, {\n                  name: \"cog\",\n                  size: 24,\n                  color: \"white\"\n                })\n              }), _jsxs(View, {\n                style: styles.profileStripContainer,\n                children: [_jsx(View, {\n                  style: styles.profileImageContainer,\n                  children: _jsx(Image, {\n                    source: defaultIcon,\n                    style: styles.profileImage,\n                    resizeMode: \"center\"\n                  })\n                }), _jsxs(View, {\n                  style: styles.userInfoContainer,\n                  children: [_jsx(Text, {\n                    style: styles.headerText,\n                    children: \"Alexksander Zitko\"\n                  }), _jsx(Text, {\n                    style: styles.subheaderText,\n                    children: \"@ aleks_ko\"\n                  }), _jsxs(View, {\n                    style: styles.locationLine,\n                    children: [_jsx(Icon, {\n                      name: \"location\",\n                      size: 14,\n                      color: \"#FFAA60\"\n                    }), _jsx(Text, {\n                      children: \" Portland, OR\"\n                    })]\n                  })]\n                })]\n              })]\n            })\n          }), _jsx(View, {\n            style: styles.buttonGroupContainer,\n            children: _jsx(ButtonGroup, {\n              onPress: this.updateIndex,\n              selectedIndex: selectedIndex,\n              buttons: buttons,\n              textStyle: {\n                fontSize: 12,\n                color: '#BDBDBD'\n              },\n              containerStyle: {\n                width: '90%',\n                height: 30,\n                borderColor: 'transparent',\n                backgroundColor: 'transparent'\n              },\n              buttonContainerStyle: {\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderColor: 'transparent'\n              },\n              innerBorderStyle: {\n                color: '#BDBDBD'\n              },\n              selectedButtonStyle: {\n                backgroundColor: 'transparent'\n              },\n              selectedTextStyle: {\n                color: '#6C6C6C',\n                fontWeight: 'bold'\n              }\n            })\n          }), this.renderSubComponent()]\n        })\n      });\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/jchen/CSProjects/project-mushbuddy/mushbuddy-app/components/profile.js"],"names":["React","Component","Icon","defaultIcon","ButtonGroup","styles","headerBackground","Badges","History","Profile","props","updateIndex","selectedIndex","setState","renderSubComponent","state","bind","buttons","container","upperContainer","headerBackgroundImage","upperNavigation","profileStripContainer","profileImageContainer","profileImage","userInfoContainer","headerText","subheaderText","locationLine","buttonGroupContainer","fontSize","color","width","height","borderColor","backgroundColor","justifyContent","alignItems","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TouchableOpacity, SafeAreaView, Image, ImageBackground, ScrollView } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport defaultIcon from '../assets/icon_default.png';\n\nimport { ButtonGroup } from 'react-native-elements';\n\nimport styles from './stylesheets/profile_style.js';\n\nimport headerBackground from '../assets/profile_assets/header_background2.png';\n\nimport Badges from './badges.js';\nimport History from './history.js';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 2\n    };\n    this.updateIndex = this.updateIndex.bind(this);\n  }\n\n  updateIndex = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  }\n\n  renderSubComponent = () => {\n    if (this.state.selectedIndex === 1) {\n      return (\n        <History />\n      );\n    } else {\n      return (\n        <Badges />\n      );\n    }\n  }\n\n  render() {\n    const buttons = ['Badges', 'History'];\n    const { selectedIndex } = this.state;\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}>\n\n          <View style={styles.upperContainer}>\n            <ImageBackground source={headerBackground} resizeMode=\"stretch\" style={styles.headerBackgroundImage}>\n\n              <View style={styles.upperNavigation}>\n                {/* <Icon name='arrow-back' size={24} color='white' /> */}\n                <Icon name='cog' size={24} color='white' />\n              </View>\n\n              <View style={styles.profileStripContainer}>\n\n                <View style={styles.profileImageContainer}>\n                  <Image\n                    source={defaultIcon}\n                    style={styles.profileImage}\n                    resizeMode='center'\n                  />\n                </View>\n\n                <View style={styles.userInfoContainer}>\n                  <Text style={styles.headerText}>\n                    Alexksander Zitko\n                  </Text>\n                  <Text style={styles.subheaderText}>\n                    @ aleks_ko\n                  </Text>\n                  <View style={styles.locationLine}>\n                    <Icon name='location' size={14} color='#FFAA60' />\n                    <Text> Portland, OR</Text>\n                  </View>\n                </View>\n\n              </View>\n            </ImageBackground>\n          </View>\n\n          <View style={styles.buttonGroupContainer}>\n            <ButtonGroup\n              onPress={this.updateIndex}\n              selectedIndex={selectedIndex}\n              buttons={buttons}\n              textStyle={{\n                fontSize: 12,\n                color: '#BDBDBD',\n              }}\n              containerStyle={{ \n                width: '90%',\n                height: 30,\n                borderColor: 'transparent',\n                backgroundColor: 'transparent',\n              }}\n              buttonContainerStyle={{ \n                justifyContent: 'center',\n                alignItems: 'center',\n                borderColor: 'transparent',\n              }}\n              innerBorderStyle={{ color: '#BDBDBD' }}\n              selectedButtonStyle={{\n                backgroundColor: 'transparent',\n              }}\n              selectedTextStyle={{ color: '#6C6C6C', fontWeight: 'bold' }}\n            />\n          </View>\n\n          {this.renderSubComponent()}\n\n        </ScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}