{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { GLOBALTYPES } from \"./globalTypes\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nexport var PROFILE_TYPES = {\n  LOADING: 'LOADING_PROFILE',\n  GET_USER: 'GET_PROFILE_USER',\n  GET_ID: 'GET_PROFILE_ID',\n  GET_POSTS: 'GET_PROFILE_POSTS'\n};\nexport var getProfileUsers = function getProfileUsers(_ref) {\n  var id = _ref.id,\n      auth = _ref.auth;\n  return function _callee(dispatch) {\n    var res, res1, users, posts;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: PROFILE_TYPES.GET_ID,\n              payload: id\n            });\n            console.log(id);\n            _context.prev = 2;\n            dispatch({\n              type: PROFILE_TYPES.LOADING,\n              payload: true\n            });\n            res = getDataAPI(\"users/\" + id, auth.token);\n            res1 = getDataAPI(\"posts/\" + id, auth.token);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(res);\n\n          case 8:\n            users = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(res1);\n\n          case 11:\n            posts = _context.sent;\n            console.log(posts);\n            dispatch({\n              type: PROFILE_TYPES.GET_USER,\n              payload: users.data\n            });\n            dispatch({\n              type: PROFILE_TYPES.GET_POSTS,\n              payload: _objectSpread(_objectSpread({}, posts.data), {}, {\n                _id: id,\n                page: 2\n              })\n            });\n            dispatch({\n              type: PROFILE_TYPES.LOADING,\n              payload: false\n            });\n            _context.next = 22;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0.response.data);\n            dispatch({\n              type: GLOBALTYPES.ALERT,\n              payload: {\n                error: _context.t0.response.data.msg\n              }\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 18]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/jchen/CSProjects/project-mushbuddy/mushbuddy-app/redux/actions/profileAction.js"],"names":["GLOBALTYPES","getDataAPI","PROFILE_TYPES","LOADING","GET_USER","GET_ID","GET_POSTS","getProfileUsers","id","auth","dispatch","type","payload","console","log","res","token","res1","users","posts","data","_id","page","response","ALERT","error","msg"],"mappings":";;;;;;;AAAA,SAASA,WAAT;AACA,SAASC,UAAT;AAGA,OAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,OAAO,EAAE,iBADgB;AAEzBC,EAAAA,QAAQ,EAAE,kBAFe;AAGzBC,EAAAA,MAAM,EAAE,gBAHiB;AAIzBC,EAAAA,SAAS,EAAE;AAJc,CAAtB;AAQP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAEC,EAAF,QAAEA,EAAF;AAAA,MAAMC,IAAN,QAAMA,IAAN;AAAA,SAAgB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CA,YAAAA,QAAQ,CAAC;AAACC,cAAAA,IAAI,EAAET,aAAa,CAACG,MAArB;AAA6BO,cAAAA,OAAO,EAAEJ;AAAtC,aAAD,CAAR;AAEAK,YAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAH2C;AAKvCE,YAAAA,QAAQ,CAAC;AAACC,cAAAA,IAAI,EAAET,aAAa,CAACC,OAArB;AAA8BS,cAAAA,OAAO,EAAE;AAAvC,aAAD,CAAR;AACMG,YAAAA,GANiC,GAM3Bd,UAAU,YAAUO,EAAV,EAAgBC,IAAI,CAACO,KAArB,CANiB;AAOjCC,YAAAA,IAPiC,GAO1BhB,UAAU,YAAUO,EAAV,EAAgBC,IAAI,CAACO,KAArB,CAPgB;AAAA;AAAA,6CASnBD,GATmB;;AAAA;AASjCG,YAAAA,KATiC;AAAA;AAAA,6CAUnBD,IAVmB;;AAAA;AAUjCE,YAAAA,KAViC;AAYvCN,YAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAT,YAAAA,QAAQ,CAAC;AACLC,cAAAA,IAAI,EAAET,aAAa,CAACE,QADf;AAELQ,cAAAA,OAAO,EAAEM,KAAK,CAACE;AAFV,aAAD,CAAR;AAKAV,YAAAA,QAAQ,CAAC;AACLC,cAAAA,IAAI,EAAET,aAAa,CAACI,SADf;AAELM,cAAAA,OAAO,kCAAMO,KAAK,CAACC,IAAZ;AAAkBC,gBAAAA,GAAG,EAAEb,EAAvB;AAA2Bc,gBAAAA,IAAI,EAAE;AAAjC;AAFF,aAAD,CAAR;AAKAZ,YAAAA,QAAQ,CAAC;AAACC,cAAAA,IAAI,EAAET,aAAa,CAACC,OAArB;AAA8BS,cAAAA,OAAO,EAAE;AAAvC,aAAD,CAAR;AAvBuC;AAAA;;AAAA;AAAA;AAAA;AAyBvCC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAIS,QAAJ,CAAaH,IAAzB;AACAV,YAAAA,QAAQ,CAAC;AACLC,cAAAA,IAAI,EAAEX,WAAW,CAACwB,KADb;AAELZ,cAAAA,OAAO,EAAE;AAACa,gBAAAA,KAAK,EAAE,YAAIF,QAAJ,CAAaH,IAAb,CAAkBM;AAA1B;AAFJ,aAAD,CAAR;;AA1BuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;AAAA,CAAxB","sourcesContent":["import { GLOBALTYPES } from './globalTypes'\nimport { getDataAPI } from '../../utils/fetchData'\n\n\nexport const PROFILE_TYPES = {\n    LOADING: 'LOADING_PROFILE',\n    GET_USER: 'GET_PROFILE_USER',\n    GET_ID: 'GET_PROFILE_ID',\n    GET_POSTS: 'GET_PROFILE_POSTS'\n}\n\n\nexport const getProfileUsers = ({id, auth}) => async (dispatch) => {\n    dispatch({type: PROFILE_TYPES.GET_ID, payload: id})\n\n    console.log(id)\n    try {\n        dispatch({type: PROFILE_TYPES.LOADING, payload: true})\n        const res = getDataAPI(`users/${id}`, auth.token)\n        const res1 = getDataAPI(`posts/${id}`, auth.token)\n        \n        const users = await res;\n        const posts = await res1;\n\n        console.log(posts)\n        dispatch({\n            type: PROFILE_TYPES.GET_USER,\n            payload: users.data\n        })\n\n        dispatch({\n            type: PROFILE_TYPES.GET_POSTS,\n            payload: {...posts.data, _id: id, page: 2}\n        })\n\n        dispatch({type: PROFILE_TYPES.LOADING, payload: false})\n    } catch (err) {\n        console.log(err.response.data)\n        dispatch({\n            type: GLOBALTYPES.ALERT, \n            payload: {error: err.response.data.msg}\n        })\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}