{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ProgressBar } from 'react-native-paper';\nimport shoeIcon from \"../assets/profile_assets/shoe.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Badges = function (_Component) {\n  _inherits(Badges, _Component);\n\n  var _super = _createSuper(Badges);\n\n  function Badges(props) {\n    var _this;\n\n    _classCallCheck(this, Badges);\n\n    _this = _super.call(this, props);\n\n    _this.renderBadge = function (category, currentTier) {\n      var matchingIcon;\n\n      if (category === 'distanceWalked') {\n        matchingIcon = shoeIcon;\n      }\n\n      var matchingBorder;\n\n      if (currentTier === 'bronze') {\n        matchingBorder = '#AE9084';\n      } else if (currentTier === 'silver') {\n        matchingBorder = '#B3CCE6';\n      } else {\n        matchingBorder = '#FFD218';\n      }\n\n      return _jsx(View, {\n        style: [styles.badgeImageContainer, {\n          borderColor: matchingBorder\n        }],\n        children: _jsx(Image, {\n          source: matchingIcon,\n          style: styles.badgeImage,\n          resizeMode: \"center\"\n        })\n      });\n    };\n\n    _this.renderProgressBar = function (progressAsDecimal) {\n      var progressColor = '#6F83E0';\n      return _jsx(ProgressBar, {\n        progress: progressAsDecimal,\n        color: progressColor,\n        style: styles.badgeProgressBar\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Badges, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.badgeRowContainer,\n          children: [_jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'bronze'), this.renderProgressBar(0.35)]\n          }), _jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'silver'), this.renderProgressBar(0.7)]\n          }), _jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'gold'), this.renderProgressBar(0.9)]\n          })]\n        }), _jsxs(View, {\n          style: styles.badgeRowContainer,\n          children: [_jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'bronze'), this.renderProgressBar(0.35)]\n          }), _jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'silver'), this.renderProgressBar(0.7)]\n          }), _jsxs(View, {\n            style: styles.badgeSingleContainer,\n            children: [this.renderBadge('distanceWalked', 'gold'), this.renderProgressBar(0.9)]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Badges;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  badgeRowContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    width: '100%',\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  badgeSingleContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  badgeImageContainer: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    borderColor: '#FFD218',\n    borderWidth: 6,\n    overflow: 'hidden'\n  },\n  badgeImage: {\n    flex: 1,\n    width: '85%',\n    height: '85%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  badgeProgressBar: {\n    width: 55,\n    marginTop: 10\n  }\n});\nexport default Badges;","map":{"version":3,"sources":["/Users/jchen/CSProjects/project-mushbuddy/mushbuddy-app/components/badges.js"],"names":["React","Component","ProgressBar","shoeIcon","Badges","props","renderBadge","category","currentTier","matchingIcon","matchingBorder","styles","badgeImageContainer","borderColor","badgeImage","renderProgressBar","progressAsDecimal","progressColor","badgeProgressBar","state","container","badgeRowContainer","badgeSingleContainer","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","width","height","marginTop","paddingLeft","paddingRight","borderRadius","borderWidth","overflow","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\n\nimport { ProgressBar } from 'react-native-paper';\n\nimport shoeIcon from '../assets/profile_assets/shoe.png';\n\nclass Badges extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    renderBadge = (category, currentTier) => {\n\n        let matchingIcon;\n        if (category === 'distanceWalked') {\n            matchingIcon = shoeIcon;\n        }\n\n        let matchingBorder;\n        if (currentTier === 'bronze') {\n            matchingBorder = '#AE9084';\n        } else if (currentTier === 'silver') {\n            matchingBorder = '#B3CCE6';\n        } else {\n            matchingBorder = '#FFD218';\n        }\n\n        return (\n            <View style={[ styles.badgeImageContainer, { \n                borderColor: matchingBorder\n            } ]}>\n                <Image\n                    source={matchingIcon}\n                    style={styles.badgeImage}\n                    resizeMode='center'\n                    />\n            </View>\n        );\n    }\n\n    renderProgressBar = (progressAsDecimal) => {\n        const progressColor = '#6F83E0';\n        return (\n            <ProgressBar\n                progress={progressAsDecimal}\n                color={progressColor}\n                style={styles.badgeProgressBar}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n                <View style={styles.badgeRowContainer}>\n\n                    {/* Bronze badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n                        {this.renderBadge('distanceWalked', 'bronze')}\n                        {this.renderProgressBar(0.35)}\n                    </View>\n\n                    {/* Silver badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n                        {this.renderBadge('distanceWalked', 'silver')}\n                        {this.renderProgressBar(0.7)}\n                        \n                    </View>\n\n                    {/* Gold badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n\n                        {this.renderBadge('distanceWalked', 'gold')}\n                        {this.renderProgressBar(0.9)}\n                        \n                    </View>\n\n                </View>\n\n                <View style={styles.badgeRowContainer}>\n\n                    {/* Bronze badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n                        {this.renderBadge('distanceWalked', 'bronze')}\n                        {this.renderProgressBar(0.35)}\n                    </View>\n\n                    {/* Silver badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n                        {this.renderBadge('distanceWalked', 'silver')}\n                        {this.renderProgressBar(0.7)}\n                        \n                    </View>\n\n                    {/* Gold badge example */}\n\n                    <View style={styles.badgeSingleContainer}>\n\n                        {this.renderBadge('distanceWalked', 'gold')}\n                        {this.renderProgressBar(0.9)}\n                        \n                    </View>\n\n                </View>\n\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    badgeRowContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        height: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 20,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    badgeSingleContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    badgeImageContainer: {\n        width: 70,\n        height: 70,\n        borderRadius: 35,\n        borderColor: '#FFD218',\n        borderWidth: 6,\n        overflow: 'hidden',\n    },\n    badgeImage: {\n        flex: 1,\n        width: '85%',\n        height: '85%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    badgeProgressBar: {\n        width: 55,\n        marginTop: 10,\n    },\n});\n\nexport default Badges;"]},"metadata":{},"sourceType":"module"}