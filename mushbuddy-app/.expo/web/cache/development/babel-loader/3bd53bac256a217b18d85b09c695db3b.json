{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"../components/stylesheets/catalog_style.js\";\nimport { getDataAPI } from \"../utils/fetchData\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MushroomCatalog = function MushroomCatalog() {\n  var renderCatalogImageWithURL = function renderCatalogImageWithURL(link) {\n    return _jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: link\n        },\n        style: styles.image\n      })\n    });\n  };\n\n  var renderCatalogInfo = function renderCatalogInfo(name, scientificName, description) {\n    return _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsxs(View, {\n        style: styles.headerLine,\n        children: [_jsx(Text, {\n          style: styles.headerText,\n          children: name\n        }), _jsxs(Text, {\n          style: styles.italicizedHeaderText,\n          children: [\"(\", scientificName, \")\"]\n        })]\n      }), _jsx(Text, {\n        numberOfLines: 2,\n        ellipsizeMode: \"tail\",\n        style: styles.descriptionText,\n        children: description\n      })]\n    });\n  };\n\n  var renderCatalogEntry = function renderCatalogEntry(entry) {\n    return _jsxs(View, {\n      style: styles.catalogEntryContainer,\n      children: [renderCatalogImageWithURL(entry.images), renderCatalogInfo(entry.nameCommon, entry.nameScientific, entry.description)]\n    });\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      auth = _useSelector.auth;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      catalog = _useState2[0],\n      setCatalog = _useState2[1];\n\n  var _useState3 = useState(9),\n      _useState4 = _slicedToArray(_useState3, 2),\n      limit = _useState4[0],\n      setLimit = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  useEffect(function _callee() {\n    var res, newData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDataAPI(\"catalog/?page=\" + page + \"&limit=\" + limit, auth.token));\n\n          case 2:\n            res = _context.sent;\n            newData = res.data.catalog;\n            console.log(catalog.length, 'length', 'useeffect');\n\n            if (newData.length > 0) {\n              setCatalog(newData);\n              setPage(page + 1);\n              console.log(catalog.length, 'length', 'useeffect');\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var handleLoadMore = function handleLoadMore() {\n    var res, newData;\n    return _regeneratorRuntime.async(function handleLoadMore$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getDataAPI(\"catalog/?page=\" + page, auth.token));\n\n          case 2:\n            res = _context2.sent;\n            newData = res.data.catalog;\n            console.log(catalog.length, 'length');\n            console.log(newData, page, catalog);\n\n            if (newData.length > 0) {\n              setCatalog(function (c) {\n                return c.concat(newData);\n              });\n              setPage(page + 1);\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: catalog,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return renderCatalogEntry(item);\n      },\n      onEndReached: handleLoadMore,\n      keyExtractor: function keyExtractor(item, index) {\n        return index;\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(View, {\n          style: {\n            marginLeft: 17.5,\n            width: '90%',\n            height: 0.5,\n            backgroundColor: '#222222'\n          }\n        });\n      }\n    })\n  });\n};\n\nexport default MushroomCatalog;","map":{"version":3,"sources":["/Users/jchen/CSProjects/project-mushbuddy/mushbuddy-app/newcomponents/MushroomCatalog.js"],"names":["React","useEffect","useState","useMemo","styles","getDataAPI","useSelector","MushroomCatalog","renderCatalogImageWithURL","link","imageContainer","uri","image","renderCatalogInfo","name","scientificName","description","infoContainer","headerLine","headerText","italicizedHeaderText","descriptionText","renderCatalogEntry","entry","catalogEntryContainer","images","nameCommon","nameScientific","state","auth","catalog","setCatalog","limit","setLimit","page","setPage","token","res","newData","data","console","log","length","handleLoadMore","c","concat","container","item","index","marginLeft","width","height","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;;;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD,EAAU;AACxC,WACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,cAApB;AAAA,gBACI,KAAC,KAAD;AACI,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAEF;AAAN,SADZ;AAEI,QAAA,KAAK,EAAEL,MAAM,CAACQ;AAFlB;AADJ,MADJ;AAQH,GATD;;AAWA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,cAAP,EAAuBC,WAAvB,EAAuC;AAC7D,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa,aAApB;AAAA,iBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,UAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,MAAM,CAACe,UAApB;AAAA,oBACKL;AADL,UADJ,EAII,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACgB,oBAApB;AAAA,0BACML,cADN;AAAA,UAJJ;AAAA,QADJ,EASI,KAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAwB,QAAA,aAAa,EAAC,MAAtC;AAA6C,QAAA,KAAK,EAAEX,MAAM,CAACiB,eAA3D;AAAA,kBACKL;AADL,QATJ;AAAA,MADJ;AAeH,GAhBD;;AAkBA,MAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClC,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAACoB,qBAApB;AAAA,iBACKhB,yBAAyB,CAACe,KAAK,CAACE,MAAP,CAD9B,EAEKZ,iBAAiB,CAACU,KAAK,CAACG,UAAP,EAAmBH,KAAK,CAACI,cAAzB,EAAyCJ,KAAK,CAACP,WAA/C,CAFtB;AAAA,MADJ;AAMH,GAPD;;AASA,qBAAiBV,WAAW,CAAC,UAAAsB,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAN,CAA5B;AAAA,MAAQC,IAAR,gBAAQA,IAAR;;AACA,kBAA8B3B,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAO4B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0B7B,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAO8B,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwB/B,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOgC,IAAP;AAAA,MAAaC,OAAb;;AAEAlC,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYI,UAAU,oBAAkB6B,IAAlB,eAAgCF,KAAhC,EAAyCH,IAAI,CAACO,KAA9C,CADtB;;AAAA;AACAC,YAAAA,GADA;AAEAC,YAAAA,OAFA,GAEUD,GAAG,CAACE,IAAJ,CAAST,OAFnB;AAGNU,YAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,MAApB,EAA2B,QAA3B,EAAoC,WAApC;;AACA,gBAAIJ,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAuB;AACnBX,cAAAA,UAAU,CAACO,OAAD,CAAV;AACAH,cAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,MAApB,EAA2B,QAA3B,EAAoC,WAApC;AACH;;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EASJ,EATI,CAAT;;AAWA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACDtC,UAAU,oBAAkB6B,IAAlB,EAA0BL,IAAI,CAACO,KAA/B,CADT;;AAAA;AACbC,YAAAA,GADa;AAEbC,YAAAA,OAFa,GAEHD,GAAG,CAACE,IAAJ,CAAST,OAFN;AAGnBU,YAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,MAApB,EAA2B,QAA3B;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAoBJ,IAApB,EAAyBJ,OAAzB;;AACA,gBAAIQ,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAuB;AACnBX,cAAAA,UAAU,CAAE,UAACa,CAAD,EAAO;AACf,uBAAOA,CAAC,CAACC,MAAF,CAASP,OAAT,CAAP;AAAyB,eADnB,CAAV;AAEAH,cAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACH;;AATkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAYA,SACI,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE9B,MAAM,CAAC0C,SAA5B;AAAA,cACI,KAAC,QAAD;AACI,MAAA,IAAI,EAAEhB,OADV;AAEI,MAAA,UAAU,EAAE,0BAAc;AAAA,YAAXiB,IAAW,QAAXA,IAAW;AAAE,eAAOzB,kBAAkB,CAACyB,IAAD,CAAzB;AAAkC,OAFlE;AAGI,MAAA,YAAY,EAAIJ,cAHpB;AAII,MAAA,YAAY,EAAE,sBAACI,IAAD,EAAOC,KAAP;AAAA,eAAiBA,KAAjB;AAAA,OAJlB;AAKI,MAAA,sBAAsB,EAAE;AAAA,eAAM,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,IAAd;AAAoBC,YAAAA,KAAK,EAAE,KAA3B;AAAkCC,YAAAA,MAAM,EAAE,GAA1C;AAA+CC,YAAAA,eAAe,EAAE;AAAhE;AAAb,UAAN;AAAA;AAL5B;AADJ,IADJ;AAWH,CA9ED;;AAgFA,eAAe7C,eAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { View, Text, Image, SafeAreaView, ScrollView, TouchableOpacity, FlatList } from 'react-native';\nimport styles from '../components/stylesheets/catalog_style.js';\nimport { getDataAPI } from '../utils/fetchData'\nimport { useSelector } from 'react-redux'\n\nconst MushroomCatalog = () => {\n    const renderCatalogImageWithURL = (link) => {\n        return (\n            <View style={styles.imageContainer}>\n                <Image\n                    source={{uri: link}}\n                    style={styles.image}\n                />\n            </View>\n        );\n    }\n\n    const renderCatalogInfo = (name, scientificName, description) => {\n        return (\n            <View style={styles.infoContainer}>\n                <View style={styles.headerLine}>\n                    <Text style={styles.headerText}>\n                        {name}\n                    </Text>\n                    <Text style={styles.italicizedHeaderText}>\n                        ({scientificName})\n                    </Text>\n                </View>\n                <Text numberOfLines={2} ellipsizeMode='tail' style={styles.descriptionText}>\n                    {description}\n                </Text>\n            </View>\n        );\n    }\n\n    const renderCatalogEntry = (entry) => {\n        return (\n            <View style={styles.catalogEntryContainer}>\n                {renderCatalogImageWithURL(entry.images)}\n                {renderCatalogInfo(entry.nameCommon, entry.nameScientific, entry.description)}\n            </View>\n        );\n    }\n\n    const { auth } = useSelector(state => state)\n    const [catalog, setCatalog] = useState([])\n    const [limit, setLimit] = useState(9)\n    const [page, setPage] = useState(1)\n\n    useEffect(async () => {\n        const res = await getDataAPI(`catalog/?page=${page}&limit=${limit}`, auth.token)\n        const newData = res.data.catalog\n        console.log(catalog.length,'length','useeffect')\n        if (newData.length > 0){\n            setCatalog(newData);\n            setPage(page+1)\n            console.log(catalog.length,'length','useeffect')\n        }\n      }, []);\n\n    const handleLoadMore = async () => {\n        const res = await getDataAPI(`catalog/?page=${page}`, auth.token)\n        const newData = res.data.catalog\n        console.log(catalog.length,'length')\n        console.log(newData,page,catalog)\n        if (newData.length > 0){\n            setCatalog( (c) => {\n                return c.concat(newData)});\n            setPage(page+1)\n        }\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <FlatList\n                data={catalog}\n                renderItem={({ item }) => { return renderCatalogEntry(item); }}\n                onEndReached = {handleLoadMore}\n                keyExtractor={(item, index) => index}\n                ItemSeparatorComponent={() => <View style={{ marginLeft: 17.5, width: '90%', height: 0.5, backgroundColor: '#222222'}} />}\n            />\n        </SafeAreaView>\n    );\n}\n\nexport default MushroomCatalog;\n"]},"metadata":{},"sourceType":"module"}